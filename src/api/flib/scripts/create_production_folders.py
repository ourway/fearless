
import os


def get_path(folder, root):
    '''Get absolute path of the folder
    '''
    return os.path.abspath(os.path.join(root, folder))


root = os.path.abspath('repo')
production_folders = {
    'animation': ['scenes', 'sourceimages', 'data', 'anim', 'poses', 'previews'],
    'rig': ['scenes', 'data', 'scripts'],
    'model': ['obj'],
    'render': ['scenes', 'sourceimages', 'data', 'test_renders', 'output_for_composite'],
    'texture': ['images/8k', 'images/4k', 'images/2k', 'images/1k', 'images/512', 'images/256', 'images/128', 'images/64',
                'source/mudbox', 'source/mari', 'source/3dcoat', 'source/photoshop', 'source/bodypaint3d', 'source/ZBrush', 'source/references'],
    'art': ['references', 'storyboard', 'matte'],
    'composite': ['nuke/images', 'nuke/scripts', 'nuke/data', 'output', 'preview'],
    'editorial': ['edit/sound', 'edit/voice', 'edit/EDL', 'edit/footage', 'edit/preview', 'output'],
    'layout': ['scenes', 'sourceimages', 'data'],
    'references': ['camera', 'obj', 'character']
}


workspace_data = '''//Maya 2014 Project Definition
//Generated by Pooyamehr Pipeline Engine v0.0.1

workspace -fr "translatorData" "data";
workspace -fr "offlineEdit" "scenes/edits";
workspace -fr "renderData" "renderData";
workspace -fr "scene" "scenes";
workspace -fr "3dPaintTextures" "sourceimages/3dPaintTextures";
workspace -fr "eps" "data";
workspace -fr "mel" "scripts";
workspace -fr "furShadowMap" "renderData/fur/furShadowMap";
workspace -fr "particles" "cache/particles";
workspace -fr "audio" "sound";
workspace -fr "scripts" "scripts";
workspace -fr "sound" "sound";
workspace -fr "DXF_FBX export" "data";
workspace -fr "furFiles" "renderData/fur/furFiles";
workspace -fr "depth" "renderData/depth";
workspace -fr "autoSave" "autosave";
workspace -fr "furAttrMap" "renderData/fur/furAttrMap";
workspace -fr "diskCache" "data";
workspace -fr "fileCache" "cache/nCache";
workspace -fr "FBX export" "data";
workspace -fr "sourceImages" "sourceimages";
workspace -fr "FBX" "data";
workspace -fr "DAE_FBX export" "data";
workspace -fr "movie" "movies";
workspace -fr "Alembic" "data";
workspace -fr "DAE_FBX" "data";
workspace -fr "iprImages" "renderData/iprImages";
workspace -fr "mayaAscii" "scenes";
workspace -fr "furImages" "renderData/fur/furImages";
workspace -fr "furEqualMap" "renderData/fur/furEqualMap";
workspace -fr "illustrator" "data";
workspace -fr "DXF_FBX" "data";
workspace -fr "mayaBinary" "scenes";
workspace -fr "move" "data";
workspace -fr "images" "images";
workspace -fr "fluidCache" "cache/nCache/fluid";
workspace -fr "clips" "clips";
workspace -fr "OBJ" "data";
workspace -fr "templates" "assets";
workspace -fr "shaders" "renderData/shaders";
'''

for dep in production_folders:
    for folder in production_folders.get(dep):
        target = get_path(dep + os.path.sep + folder, root)
        os.makedirs(target)
    folder_path = get_path(dep, root)
    if os.path.isdir(folder_path + os.path.sep + 'scenes'):
        with open(folder_path + os.path.sep + 'workspace.mel', 'w') as f:
            f.write(workspace_data)
