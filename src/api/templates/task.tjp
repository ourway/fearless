<%
if not (task.resources or task.children):
    return
depends = list()
%>
% for dependency in task.depends:
    <%
        if dependency == task.parent:
            continue
        depends.append('%s_%s'% (dependency.title, dependency.id))
        target = dependency
        while True:
            parent = target.parent
            if not parent: break
            depends.append('%s_%s'% (parent.title, parent.id))
            target = target.parent
    %>
% endfor
    task ${task.title}_${task.id} "${task.title.title()}_${task.id}" {
    % if task.resources:
        allocate ${','.join([i.alias for i in task.resources])}
    % endif
    % if task.effort and not task.children:
        effort ${task.effort}h
    % endif
    % if task.priority:
        priority ${task.priority}
    % endif
    % if task.complete:
        complete ${task.complete}
    % endif
    %if not task.depends and not task.parent:
        start ${task.start.strftime('%Y-%m-%d')}
    % endif
    % if depends:
        depends ${'.'.join(depends[::-1])}
    % endif
    % if subtask:
        ${subtask}
    % endif
    }

