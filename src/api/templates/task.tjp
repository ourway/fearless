<%

depends = list()
isMilestone = False
%>
% for dependency in task.depends:
    <%
        if dependency == task.parent:
            continue
        hr = []
        hr.append(str(dependency.id))
        target = dependency
        level = 0
        while True:
            parent = target.parent
            if not parent:
                #parent = target
                break
            level +=1
            hr.append(str(parent.id))
            target = target.parent
        if (dependency.title != target.title) or not task.parent:
            depends.append('__%s._%s' % (dependency.project.id, '._'.join(hr[::-1])))
        else:
            print target.title, task.title, dependency.title, parent, level
    %>
% endfor
    task _${task.id} "${task.title.title()}" {
    % if not task.children and not task.parent and not task.effort:
        <%
          isMilestone = True
        %>
        milestone
        start ${task.end.strftime('%Y-%m-%d')}
        end ${task.end.strftime('%Y-%m-%d')}
    % endif
    % if task.note:
        note "${task.note}"
    % endif
    % if task.resources:
        allocate ${','.join(['_'+str(i.id) for i in task.resources])}
    % endif
    % if task.effort and not task.children:
        effort ${task.effort}h
    % endif
    % if task.priority:
        priority ${task.priority}
    % endif
    % if task.complete:
        complete ${task.complete}
    % endif
    %if not task.depends and not task.parent and not isMilestone:
        start ${task.start.strftime('%Y-%m-%d')}
    % endif
    %if not task.children and not task.effort and not isMilestone:
        end ${task.end.strftime('%Y-%m-%d')}
    % endif
    % if depends:
        depends ${','.join(depends[::-1])}
    % endif
    % if subtask:
        ${subtask}
    % endif
    }


