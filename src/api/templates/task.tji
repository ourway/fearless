<%
import datetime
now = datetime.datetime.now()
today = now.strftime('%Y-%m-%d')
depends = list()
isMilestone = False
if task.project.start > task.start:
    task.start=task.project.start
responsibles = ' '.join(['_%s'%i.id for i in task.responsibles])
%>
% for dependency in task.depends:
    <%
        if dependency == task.parent or dependency==task:
            continue
        hr = []
        hr.append(str(dependency.id))
        target = dependency
        if task.id == 4501:
            print task.depends
        level = 0
        while True:
            parent = target.parent
            if not parent:
                break
            level +=1
            hr.append(str(parent[-1].id))
            target = target.parent[-1]
        if dependency.title != target.title or not task.parent:
            depends.append('fearless.__%s._%s' % (dependency.project.id, '._'.join(hr[::-1])))
    %>
% endfor
    task _${task.id} "${task.title.title()}" {
    % if not task.children and not task.parent and not task.effort:
        <%
          isMilestone = True
        %>
        milestone
        % if not task.depends and not task.parent:
            start ${task.start.strftime('%Y-%m-%d')}
            actual:start ${task.start.strftime('%Y-%m-%d')}
            end ${task.start.strftime('%Y-%m-%d')}
            actual:end ${task.start.strftime('%Y-%m-%d')}
        % endif
        % if all([i.complete==100 for i in task.depends]) and now>=task.start:
          complete 100
        % endif
    % endif
    % if task.note:
        note "${task.note}"
    % endif
    % if task.resources:
        allocate ${','.join(['_'+str(i.id) for i in task.resources])}
    % endif
    % if responsibles:
        responsible ${responsibles}
    % endif
    % if task.effort and not task.children:
        effort ${task.effort}h
    % endif
    % if task.priority:
        priority ${task.priority}
    % endif
    % if task.complete!=None and not isMilestone and all([i.complete==100 for i in task.depends]):
        complete ${task.complete}
    % elif not isMilestone:
        complete 0
    % endif
    % if not task.effort and not isMilestone and not task.parent:
        start ${task.start.strftime('%Y-%m-%d')}
        actual:start ${task.start.strftime('%Y-%m-%d')}
        % if not task.children:
            end ${task.end.strftime('%Y-%m-%d')}
            actual:end ${task.end.strftime('%Y-%m-%d')}
        % endif
    % elif task.effort and not task.depends and not task.parent:
        start ${task.start.strftime('%Y-%m-%d')}
        actual:start ${task.start.strftime('%Y-%m-%d')}
    % endif
    % if depends:
        depends ${','.join(depends[::-1])}
    % endif
    % if subtask:
        ${subtask}
    % endif
    }
