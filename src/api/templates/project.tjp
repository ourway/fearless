project _${project.id} "${project.name}" ${project.start.strftime('%Y-%m-%d')} - ${project.end.strftime('%Y-%m-%d')} {
    timingresolution 5min
    now  ${now.strftime('%Y-%m-%d')}
  currencyformat "(" ")" "," "." 0
    
    #dailyworkinghours 7.45
    workinghours mon 09:00 - 13:00, 14:00 - 18:00
    workinghours tue 09:00 - 13:00, 14:00 - 18:00
    workinghours wed 09:00 - 13:00, 14:00 - 18:00
    workinghours thu 09:00 - 13:00
    workinghours sat 09:00 - 13:00, 14:00 - 18:00
    workinghours sun 09:00 - 13:00, 14:00 - 18:00
    workinghours fri off
    timeformat "%y-%m-%d %H-%M"
    scenario plan "Plan" {
        #scenario delayed "Delayed"
        }
}


% for vy in xrange(2014,2021):
    vacation "Martyrdom of Imam Reza" ${vy}-1-2
    vacation "Birthday of Muhammad and Imam Sadeq" ${vy}-1-19
    vacation "Revolution Day" ${vy}-2-11
    vacation "Nourooz" ${vy}-3-20 - ${vy}-3-25
    vacation "Islamic Republic Day" ${vy}-4-1
    vacation "Nature Day" ${vy}-4-2
    vacation "Martyrdom of Fatima" ${vy}-4-3
    vacation "Birthday of Imam Ali" ${vy}-5-13
    vacation "Prophet's Ascension" ${vy}-5-27
    vacation "Anniversary of Khomeini's Death" ${vy}-6-4
    vacation "Revolt of Khordad 15" ${vy}-6-5
    vacation "Imam Mahdi's birthday" ${vy}-7-13
    vacation "June Solstice" ${vy}-7-21
    vacation "Martyrdom of Imam Ali" ${vy}-8-19
    vacation "Eid-e-Fetr (End of Ramadan)" ${vy}-8-29 - ${vy}-8-30
    vacation "Martyrdom of Imam Sadeq" ${vy}-9-22
    vacation "September equinox" ${vy}-9-23
    vacation "Eid-e-Ghorban (Feast of Sacrifice)" ${vy}-10-5
    vacation "Eid-al-Ghadir" ${vy}-10-13
    vacation "Tassoua/Ashoura" ${vy}-11-26
    vacation "Arbaeen" ${vy}-12-13
    vacation "December Solstice / Demise of Prophet Muhammad" ${vy}-12-21
    vacation "Martyrdom of Imam Reza" ${vy}-12-23
% endfor



account resourceCost_${project.id} "Resource Cost" {
  aggregate resources
    <%
        rlist = []
    %>
    % for t in project.tasks:
        % for resource in t.resources:
            % if not resource in rlist:
        account _${resource.id} "${resource.firstname} ${resource.lastname}"
                <%
                    rlist.append(resource)
                %>
            % endif
        % endfor
    % endfor
}
account productCost_${project.id} "Product Cost" {
  aggregate tasks
}
account customerPayments_${project.id} "Customer Payments" {

}
balance resourceCost_${project.id} customerPayments_${project.id}



    resource members "project ${project.name} members" {
    <%
        rlist = []
    %>
    % for t in project.tasks:
        % for resource in t.resources:
            % if not resource in rlist:
        resource _${resource.id} "${resource.firstname} ${resource.lastname}" {
                efficiency ${resource.efficiency}
                rate ${resource.rate}
                chargeset _${resource.id}
                <%
                    rlist.append(resource)
                %>
            }
            % endif
        % endfor
    % endfor
    }
    task __${project.id} "${project.name.title()}" {
        start  ${project.start.strftime('%Y-%m-%d')}
        chargeset productCost_${project.id}
        % for task in tasks:
            ${task}
        % endfor
    }




taskreport breakdown "PMS_${project.id}"{
            formats csv
            loadunit hours
                columns id, line, name, opentasks, start, end, managers, effort, effortdone, effortleft, criticalness, duration, complete, efficiency
                taskreport breakdown1 "plan_${project.id}"{
                    formats html
                    loadunit longauto
                    columns name, start, end, effortleft, alert, criticalness {title "Importance"}, complete {title "Progress"}, chart { scale week width 300 }
                    sorttasks plan.criticalness.up
                }
                taskreport breakdown2 "guntt_${project.id}"{
                    formats html
                    loadunit longauto
                    columns name, chart { scale day width 800 }, complete {title "Progress"}
                    sorttasks plan.criticalness.up
                }
              #tracereport pb "Product Burndown" {
              #  columns opentasks
              #}
        }

  textreport "resource_${project.id}" {
    formats html
    title "Resource Graph"
    center '<[report id="resourceGraph"]>'
  }

resourcereport resourceGraph "" {
  scenarios plan
  columns bsi, name, effortleft, complete {title "progress"}, chart {scale day width 400}
  loadunit hours
  # We only like to show leaf tasks for leaf resources.
    hidetask ~(isleaf() & isleaf_())
  sorttasks plan.criticalness.down
}

export "MS-Project_${project.id}" {
  formats mspxml
  loadunit days
}

accountreport "ProfiAndLoss_${project.id}" {
  formats html
  columns no, name, monthly
}

accountreport "ProfiAndLossCsv_${project.id}" {
  formats csv
  currencyformat "(" ")" "" "." 0
  columns no, name, monthly
}
